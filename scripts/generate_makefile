#!/bin/python3

"""This script generates a Makefile for this minishell project."""

import os
import sys
import textwrap
from datetime import datetime

def print_in_red(text):
    print("\033[91m{}\033[0m".format(text))

def print_in_green(text):
    print("\033[92m{}\033[0m".format(text))

def get_root_dir():
	if os.getcwd().endswith("minishell"):
		return (os.getcwd())
	elif os.getcwd().endswith("scripts"):
		return (os.path.dirname(os.getcwd()))
	else:
		print_in_red("Oops! You should call this script from either the \"minishell\" or \"scripts\" folder. Aborting!")
		quit(1)

def get_src_dir():
	return (os.path.join(root_dir, 'src'))

def get_include_dir():
	return (os.path.join(root_dir, 'include'))

def get_sources():
	sources = ""
	for root, dirs, files in os.walk(src_dir):
		dirname = ""
		while not root.endswith('src'):
			dirname = os.path.join(os.path.basename(root), dirname)
			root = os.path.dirname(root)
		dirname = os.path.join('src', dirname)
		for file in files:
			if file.endswith('.c'):
				basename = os.path.basename(file)
				sources += f'\t\t\t\t\t\t{os.path.join(dirname, basename)} \\\n'
	sources = sources[5:]
	sources = sources[:-3]
	sources += '\n'
	return (sources)

def get_objects():
	return (sources.replace('.c', '.o'))

def get_headers():
	headers = ""
	for root, dirs, files in os.walk(include_dir):
		for file in files:
			if file.endswith('.h'):
				basename = os.path.basename(file)
				headers += f'\t\t\t\t\t\tinclude/{basename} \\\n'
	headers = headers[5:]
	headers = headers[:-3]
	headers += '\n'
	return (headers)

def get_depends():
	return (sources.replace('.c', '.d'))

def get_includes():
	includes = ""
	includes += f'\t\t\t\t\t\t-iquote include \\\n'
	includes = includes[5:]
	includes = includes[:-3]
	return (includes)

root_dir = get_root_dir()
src_dir = get_src_dir()
include_dir = get_include_dir()
username = "bhildebr"
current_datetime = datetime.now().strftime('%Y/%m/%d %H:%M:%S')
sources = get_sources()
objects = get_objects()
headers = get_headers()
depends = get_depends()
includes = get_includes()
content = textwrap.dedent(f"""
			# **************************************************************************** #
			#                                                                              #
			#                                                         :::      ::::::::    #
			#    Makefile                                           :+:      :+:    :+:    #
			#                                                     +:+ +:+         +:+      #
			#    By: {format(f'{username} <{username}@student.42.fr>', '<42')} +#+  +:+       +#+         #
			#                                                 +#+#+#+#+#+   +#+            #
			#    Created: {current_datetime} by {format(username, '<17')} #+#    #+#              #
			#    Updated: {current_datetime} by {format(username, '<16')} ###   ########.fr        #
			#                                                                              #
			# **************************************************************************** #

			NAME = minishell

			CC = gcc
			CFLAGS = -Wall -Wextra -Werror -g -MMD -MP
			LIBS = -lreadline

			SOURCES = {sources}
			OBJECTS = {objects}
			HEADERS = {headers}
			DEPENDS = {depends}
			INCLUDES = {includes}

			all: $(NAME)

			$(NAME): $(OBJECTS)
				$(CC) $(CFLAGS) $(OBJECTS) $(INCLUDES) -o $(NAME) $(LIBS)

			%.o: %.c
				$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@
			
			clean:
				$(RM) $(OBJECTS) $(DEPENDS)

			fclean: clean
				$(RM) $(NAME)

			re: fclean all

			-include $(DEPENDS)

			.PHONY: all clean fclean re
		""").strip('\n');
with open(os.path.join(root_dir, 'Makefile'), 'w') as file:
	file.write(content)
print_in_green("Hooray! That's done.")